!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}toggleButtonState(){let e=!1;this._inputEls.forEach((t=>{t.validity.valid&&(e=!0)})),this._hasInvalidInput()?this.disableButton():this._enableButton()}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class t{constructor(e,t,s){let{name:n,link:r}=e;this._name=n,this._link=r,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeButton()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeButton(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}getView(){this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);const e=this._cardElement.querySelector(".card__image"),t=this._cardElement.querySelector(".card__title");return e.src=this._link,e.alt=this._name,t.textContent=this._name,this._setEventListeners(),this._cardElement}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close"))&&this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset(),this.close()}))}}document.querySelector("#profile-modal-closed"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild;const r=document.querySelector("#profile-add-button"),o=(document.querySelector("#modal-card-closed"),document.querySelector("#modal__input_type_title"),document.querySelector("#modal__input_type_url"),document.querySelector(".cards__list"),document.querySelector("#profile-edit-modal").querySelector(".modal__form")),i=(document.querySelector("#profile-add-button"),document.querySelector("#profile-edit-button")),l=document.querySelector("#profile-name-input"),a=document.querySelector("#profile-description-input"),c=document.querySelector("#profile-add-modal").querySelector("#add-card-form"),u=document.querySelector("#modal-preview"),d=(u.querySelector("#modal-close-preview"),u.querySelector(".modal__image-preview"),u.querySelector("#modal-image-title"),{inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),m=new e(d,o),_=new e(d,c);m.enableValidation(),_.enableValidation();const p=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._element=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._element.prepend(e)}clear(){this._element.innerHTML=""}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=f(e);p.addItem(t)}},".cards__list");p.renderItems();const h=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._descriptionElement=document.querySelector(t)}getUserInfo(){return{title:this._nameElement.textContent,description:this._descriptionElement.textContent}}setUsersInfo(e){let{name:t,description:s}=e;this._nameElement.textContent=t,this._descriptionElement.textContent=s}}(".profile__title",".profile__description"),E=new n("#profile-add-modal",(function(e){const t=f({name:e.title,link:e.url});p.addItem(t),E.close()}));E.setEventListeners();const v=new n("#profile-edit-modal",(function(e){h.setUsersInfo({name:e.name,description:e.description}),v.close()}));v.setEventListeners();const S=new class extends s{constructor(e){super({popupSelector:e}),this._previewImage=this._popupElement.querySelector(".modal__image-preview"),this._previewTitle=this._popupElement.querySelector("#modal-image-title")}open(e){let{link:t,name:s}=e;this._previewImage.src=t,this._previewImage.alt=s,this._previewTitle.textContent=s,super.open()}}("#modal-preview");function y(e){S.open(e)}function f(e){return new t(e,"#card-template",y).getView()}S.setEventListeners(),r.addEventListener("click",(()=>{_.toggleButtonState(),E.open()})),i.addEventListener("click",(()=>{const e=h.getUserInfo();l.value=e.title,a.value=e.description,v.open()})),m.enableValidation(),_.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,